version: "3"
services:

    orientdb:
        image: orientdb:latest
        volumes:
            - orientdb_config:/orientdb/config
            - orientdb_databases:/orientdb/databases
        environment:
            ORIENTDB_ROOT_PASSWORD: root
            ORIENTDB_NODE_NAME: root
        ports:
            - "2480:2480"
            - "2424:2424"
            - "8182:8182"
        networks:
            microservices:
                aliases:
                    - database-orientdb

    backend-accounts:
        build: ./services/backend/accounts
        expose:
            - "3204"
        depends_on:
            - "orientdb"
        networks:
            microservices:
                aliases:
                    - service-accounts

    backend-reviews:
        build: ./services/backend/reviews
        expose:
            - "3203"
        depends_on:
            - "orientdb"
        networks:
            microservices:
                aliases:
                    - service-reviews

    backend-products:
        build: ./services/backend/products
        expose:
            - "3202"
        depends_on:
            - "orientdb"
        networks:
            microservices:
                aliases:
                    - service-products

    backend-inventory:
        build: ./services/backend/inventory
        expose:
            - "3201"
        depends_on:
            - "orientdb"
        networks:
            microservices:
                aliases:
                    - service-inventory

    backend-gateway:
        build: ./services/backend/gateway
        ports:
            - "3200:3200"
        environment: 
            WAIT_HOSTS: 
                backend-inventory:3201, 
                backend-products:3202, 
                backend-reviews:3203, 
                backend-accounts:3204
        depends_on:
            - "orientdb"
            - "backend-accounts"
            - "backend-reviews"
            - "backend-products"
            - "backend-inventory"
        networks:
            microservices:
                aliases:
                    - service-backend-gateway

    frontend:
        build: ./services/frontend
        ports:
            - "3000:3000"
        environment: 
            WAIT_HOSTS: api-gateway:3200
        depends_on:
            - "api-gateway"
        networks:
            microservices:
                aliases:
                    - service-frontend

    nginx-gateway:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - nginx_config:/etc/nginx/conf.d/
            - nginx_certificates:/etc/ssl/
        # ---
        #    - certbot:/var/www/certbot
        # command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
        # ---
        networks:
            microservices:

    # ---
    # certbot:
    #     image: certbot/certbot
    #   restart: unless-stopped
    #   volumes:
    #       - nginx_certificates:/etc/letsencrypt
    #       - certbot:/var/www/certbot
    #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    #   networks:
    #       microservices:
    # ---

networks:
    microservices:

volumes:
    orientdb_config:
        driver_opts:
            type: none
            device: ${PWD}/dockerfiles/orientdb/config
            o: bind
    orientdb_databases:
        driver_opts:
            type: none
            device: ${PWD}/dockerfiles/orientdb/databases
            o: bind
    nginx_config:
        driver_opts:
            type: none
            device: ${PWD}/dockerfiles/nginx/config
            o: bind
    nginx_certificates:
        driver_opts:
            type: none
            device: ${PWD}/dockerfiles/nginx/certificates
            o: bind
    # ---
    # certbot:
    #    driver_opts:
    #         type: none
    #         device: ${PWD}/dockerfiles/certbot
    #         o: bind
    # ---
